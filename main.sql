USE sqlgithub1;

/*  1) Uploading a local database and using SQL queries to answer questions related to customer results on a Online Poker Platform.  */

/*  Creating table to receive CSV file 'customer'. I utilized "Table Data Import Wizard", but as a demonstration here, I copied some code lines from the DDL and simulated a LOAD DATA INFILE so you can understand the tables easier:  */

CREATE TABLE IF NOT EXISTS sqlgithub1.customer (
  id INT,
  gender VARCHAR(1) DEFAULT NULL,
  birth_date DATE DEFAULT NULL,
  registration_date DATETIME,
  city VARCHAR(50),
  province VARCHAR(2)
);

/*  Loading CSV table "customer" into table:   */

LOAD DATA INFILE "C:\\Users\\cabfb\\OneDrive\\Documentos\\Coding\\Projetos\\Python\\Upload-DB-and-Poker-SQL-queries\\Datasets\\customer.csv"
INTO TABLE sqlgithub1.customer
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 LINES;

/* Creating table to receive CSV file 'resultâ€™. I also utilized "Table Data Import Wizard", but again, as a demonstration here, I copied some code lines from the DDL and simulated a LOAD DATA INFILE so you can understand the tables easier: */

CREATE TABLE IF NOT EXISTS sqlgithub1.result (
  `entry_date` text,
  `customer_id` int DEFAULT NULL,
  `buyin` double DEFAULT NULL,
  `rake` double DEFAULT NULL,
  `winning` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*  Loading CSV table "result" into table:   */

LOAD DATA INFILE "C:\\Users\\cabfb\\OneDrive\\Documentos\\Coding\\Projetos\\Python\\Upload-DB-and-Poker-SQL-queries\\Datasets\\result.csv"
INTO TABLE sqlgithub1.result
FIELDS TERMINATED BY ','
ENCLOSED BY '"'
LINES TERMINATED BY '\n'
IGNORE 1 LINES;

/*  a) How much rake was generated by each generation* of players?  */

/*  Selecting each generation and adding the rakes:  */

SELECT
    CASE
        WHEN YEAR(birth_date) BETWEEN 0000 AND 1924 THEN 'Others'
        WHEN YEAR(birth_date) BETWEEN 1925 AND 1940 THEN 'Veterans'
        WHEN YEAR(birth_date) BETWEEN 1941 AND 1959 THEN 'Baby Boomers'
        WHEN YEAR(birth_date) BETWEEN 1960 AND 1979 THEN 'Gen X'
        WHEN YEAR(birth_date) BETWEEN 1980 AND 1995 THEN 'Gen Y'
        WHEN YEAR(birth_date) BETWEEN 1996 AND 2010 THEN 'Gen Z'
        ELSE 'Gen Alpha'
    END AS generation,
    SUM(rake) AS total_rake
FROM
    result
    INNER JOIN customer ON result.customer_id = customer.id
GROUP BY
    generation;

/*  b) How much rake generated per month?  */

SELECT
    YEAR(entry_date) AS year,
    MONTH(entry_date) AS month,
    SUM(rake) AS totalRake
FROM
    result
GROUP BY
    year, month
ORDER BY
	year DESC, month DESC;
    
/*  c) Which gender has a higher proportion of winners*?  */

SELECT
    gender,
    COUNT(*) AS total_players,
    SUM(CASE WHEN winning > 0 THEN 1 ELSE 0 END) AS total_winners,
    (SUM(CASE WHEN winning > 0 THEN 1 ELSE 0 END) / COUNT(*)) AS winners_proportion
FROM
    customer
    INNER JOIN result ON customer.id = result.customer_id
GROUP BY
    gender
ORDER BY
    winners_proportion DESC
LIMIT 3;